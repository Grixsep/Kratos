//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    Ignasi de Pouplana
//

#if !defined(KRATOS_LASERDRILLING_APPLICATION_VARIABLES_H_INCLUDED)
#define KRATOS_LASERDRILLING_APPLICATION_VARIABLES_H_INCLUDED

// System includes

// External includes

// Project includes
#include "includes/define.h"
#include "includes/variables.h"
#include "includes/global_pointer_variables.h"

namespace Kratos
{

// Variables definition
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, double, NO2)
KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(LASERDRILLING_APPLICATION, TRANSPORT_VELOCITY)
KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(LASERDRILLING_APPLICATION, VECTOR_VELOCITAT_VENT)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, bool, IS_POTENTIAL_FLOW_STEP)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, double, VELOCITAT_VENT)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, double, DIRECCIO_VENT)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, double, METEO_DIRECCIO_VENT)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, std::string, STARTING_DATE)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, int, SIMULATION_DURATION_IN_DAYS)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, bool, WIND_AUTOMATIC_PROCESS)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, bool, POLLUTANT_AUTOMATIC_PROCESS)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, std::string, CITY)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, int, CASE_ID)
KRATOS_DEFINE_APPLICATION_VARIABLE(LASERDRILLING_APPLICATION, bool, IN_PRODUCTION)

}

#endif /* KRATOS_LASERDRILLING_APPLICATION_VARIABLES_H_INCLUDED */
